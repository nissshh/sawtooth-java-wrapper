// Copyright 2017 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.mycompany.blockchain.sawtooth.loan.protobuf";

message Loan {
    // laon ID
    string id = 1;
    
    // Savings Balance (in cents to avoid float)
    uint32 balance = 2;
    
    //Customer Id of the Lender of the loan
    string lender_id = 3;
    
    //Customer Id of the Borrower of the loan
    string borrower_id = 4;
    
    //Loan Rate of Interest
    float roi = 5;
    
    //Asset id against which the loan will be requested
    string asset_id = 6;
    
    //Loan Status. Can be - Requested/Approved/Active/Closed
    LoanStatus status = 7;
    
    //Payments Made against the loan
    repeated Payment payments = 8;
    
    //Loan amount approved against the asset and borrower income 
    uint32 approved_amt = 9;
    
    //Loan amount which borrower has requested for
    uint32 requested_amt = 10;    
        
}

message LoanRequestPayload {
    message CreateLoanRequest {
         // laon ID
	    string id = 1;
	    
	    //Customer Id of the Lender of the loan
	    string lender_id = 2;
	    
	    //Customer Id of the Borrower of the loan
	    string borrower_id = 3;
	    
	    //Loan Rate of Interest
	    float roi = 4;
	    
	    //Asset id against which the loan will be requested
	    string asset_id = 5;
	    
	    //Loan amount which borrower has requested for
	    uint32 requested_amt = 6;    
    }

    message ApproveLoanRequest {
		// laon ID
	    string id = 1;
	    
	    //Customer Id of the Lender of the loan
	    string lender_id = 2;
	    
	    //Customer Id of the Borrower of the loan
	    string borrower_id = 3;
	    
	    //Loan Rate of Interest
	    float roi = 4;
	    
	    //Asset id against which the loan will be requested
	    string asset_id = 5;
	    
	    //Loan Status. Can be - Requested/Approved/Active/Closed
	    LoanStatus status = 6;
	    
	    //Loan amount approved against the asset and borrower income 
	    uint32 approved_amt = 7;
    }  
    
     message MonthlyPayment {
			    
	    //Asset id against which the loan will be requested
	    string asset_id = 1;

		// Payment Details	    
	    Payment payment = 2;  
    }  
        
    enum PayloadType {        
        CREATE_LOAN = 0;
        APPROVE_LOAN = 1;  
        MONTHLY_PAYMENT = 2;      
    }
    
    PayloadType payload_type = 1;
    CreateLoanRequest create_loan_request = 2;
    ApproveLoanRequest approve_loan_request = 3;    
    MonthlyPayment monthly_payment = 4;
}

message Payment {
	// payment ID
    string id = 1;
    
    //Customer Id of the Borrower of the loan
    string from = 2;
    
    //Customer Id of the Lender of the loan
    string to = 3;
    
    //Amount which borrower is paying against loan 
    uint32 amount =  4; 
} 

enum LoanStatus {        
    REQUESTED = 0;
    APPROVED = 1;  
    ACTIVE = 2;
    CLOSED = 3;      
}